package com.aut.pdc.mike.gui;

import com.aut.pdc.mike.gamemodel.Food;
import java.text.DecimalFormat;
import com.aut.pdc.mike.gamemodel.MyThread;
import com.aut.pdc.mike.gamemodel.Player;
import com.aut.pdc.mike.gamemodel.Toys;
import java.awt.Color;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 * Virtual Pet Game Frame
 * @author Minghao Yang
 */
public class VirtualPetFrame extends javax.swing.JFrame {

    /**
     * Creates new form VirtualPetFrame
     */
    public VirtualPetFrame(Player player) {
        this.getContentPane().setBackground(new Color(200, 164, 152));
        this.player = player;
        //Initialize the food list and toy list
        this.player.readItemInfo();
        initComponents();
        mt = new MyThread(this);
        mt.start();
    }

    private VirtualPetFrame() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        javax.swing.JPanel pnlPet = new javax.swing.JPanel();
        javax.swing.JPanel pnlPlayerData1 = new javax.swing.JPanel();
        javax.swing.JLabel lblPetName = new javax.swing.JLabel();
        txtPetName = new javax.swing.JLabel();
        javax.swing.JLabel lblPetEnergy = new javax.swing.JLabel();
        progPetEnergy = new javax.swing.JProgressBar();
        javax.swing.JLabel lblPetHappiness = new javax.swing.JLabel();
        progPetHappiness = new javax.swing.JProgressBar();
        javax.swing.JLabel lblPetHealth = new javax.swing.JLabel();
        progPetHealth = new javax.swing.JProgressBar();
        lblPetAge = new javax.swing.JLabel();
        lblPetAlive = new javax.swing.JLabel();
        txtPetAlive = new javax.swing.JLabel();
        txtPetAge = new javax.swing.JLabel();
        lblPetStrain = new javax.swing.JLabel();
        txtPetStrain = new javax.swing.JLabel();
        javax.swing.JPanel pnlInventory = new javax.swing.JPanel();
        javax.swing.JScrollPane scrlInventory = new javax.swing.JScrollPane();
        listInventory = new javax.swing.JList();
        btnFeed = new javax.swing.JButton();
        javax.swing.JPanel pnlInventory1 = new javax.swing.JPanel();
        javax.swing.JScrollPane scrlInventory1 = new javax.swing.JScrollPane();
        listInventory1 = new javax.swing.JList();
        btnPlay = new javax.swing.JButton();
        Vet = new javax.swing.JPanel();
        btnCure = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnExit = new javax.swing.JButton();
        tipsLabel = new javax.swing.JLabel();
        tipsText = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(200, 164, 152));
        setPreferredSize(new java.awt.Dimension(930, 730));
        getContentPane().setLayout(null);

        pnlPet.setBackground(new java.awt.Color(200, 164, 152));
        pnlPet.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pet Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 3, 15))); // NOI18N
        pnlPet.setLayout(new java.awt.BorderLayout());

        pnlPlayerData1.setBackground(new java.awt.Color(200, 164, 152));
        pnlPlayerData1.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));

        lblPetName.setFont(new java.awt.Font("Tahoma", 2, 13)); // NOI18N
        lblPetName.setText("Name:");

        txtPetName.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txtPetName.setText(this.player.getPet().getName());

        lblPetEnergy.setFont(new java.awt.Font("Tahoma", 2, 13)); // NOI18N
        lblPetEnergy.setText("Energy:");

        progPetEnergy.setBackground(new java.awt.Color(255, 255, 255));
        progPetEnergy.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        progPetEnergy.setForeground(new java.awt.Color(0, 153, 51));
        progPetEnergy.setValue(this.player.getPet().getEnergy());
        progPetEnergy.setStringPainted(true);

        lblPetHappiness.setFont(new java.awt.Font("Tahoma", 2, 13)); // NOI18N
        lblPetHappiness.setText("Happiness:");

        progPetHappiness.setBackground(new java.awt.Color(255, 255, 255));
        progPetHappiness.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        progPetHappiness.setForeground(new java.awt.Color(0, 153, 51));
        progPetHappiness.setValue(this.player.getPet().getHappiness());
        progPetHappiness.setStringPainted(true);

        lblPetHealth.setFont(new java.awt.Font("Tahoma", 2, 13)); // NOI18N
        lblPetHealth.setText("Health:");

        progPetHealth.setBackground(new java.awt.Color(255, 255, 255));
        progPetHealth.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        progPetHealth.setForeground(new java.awt.Color(0, 153, 51));
        progPetHealth.setValue(new Double(this.player.getPet().getHealth()).intValue());
        progPetHealth.setStringPainted(true);

        lblPetAge.setFont(new java.awt.Font("Tahoma", 2, 13)); // NOI18N
        lblPetAge.setText("Age:");

        lblPetAlive.setFont(new java.awt.Font("Tahoma", 2, 13)); // NOI18N
        lblPetAlive.setText("Alive :");

        txtPetAlive.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txtPetAlive.setText(this.player.getPet().AliveString());

        txtPetAge.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txtPetAge.setText(new DecimalFormat("0").format(this.player.getPet().getAge())
        );

        lblPetStrain.setFont(new java.awt.Font("Tahoma", 2, 13)); // NOI18N
        lblPetStrain.setText("Strain:");

        txtPetStrain.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txtPetStrain.setText(this.player.getPet().getStrain());

        javax.swing.GroupLayout pnlPlayerData1Layout = new javax.swing.GroupLayout(pnlPlayerData1);
        pnlPlayerData1.setLayout(pnlPlayerData1Layout);
        pnlPlayerData1Layout.setHorizontalGroup(
            pnlPlayerData1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPlayerData1Layout.createSequentialGroup()
                .addComponent(lblPetName)
                .addGap(68, 68, 68)
                .addComponent(txtPetName))
            .addGroup(pnlPlayerData1Layout.createSequentialGroup()
                .addComponent(lblPetHealth)
                .addGap(63, 63, 63)
                .addComponent(progPetHealth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(pnlPlayerData1Layout.createSequentialGroup()
                .addGroup(pnlPlayerData1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPetAlive)
                    .addComponent(lblPetAge)
                    .addComponent(lblPetStrain))
                .addGap(68, 68, 68)
                .addGroup(pnlPlayerData1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPetStrain)
                    .addComponent(txtPetAlive)
                    .addComponent(txtPetAge)))
            .addGroup(pnlPlayerData1Layout.createSequentialGroup()
                .addGroup(pnlPlayerData1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPetEnergy)
                    .addComponent(lblPetHappiness))
                .addGap(42, 42, 42)
                .addGroup(pnlPlayerData1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(progPetHappiness, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(progPetEnergy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        pnlPlayerData1Layout.setVerticalGroup(
            pnlPlayerData1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPlayerData1Layout.createSequentialGroup()
                .addGroup(pnlPlayerData1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPetName)
                    .addComponent(txtPetName))
                .addGap(10, 10, 10)
                .addGroup(pnlPlayerData1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPlayerData1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(lblPetEnergy))
                    .addComponent(progPetEnergy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(pnlPlayerData1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblPetHappiness)
                    .addComponent(progPetHappiness, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(pnlPlayerData1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPlayerData1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(lblPetHealth))
                    .addComponent(progPetHealth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlPlayerData1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPetAge)
                    .addComponent(lblPetAge, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlPlayerData1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPetAlive)
                    .addComponent(lblPetAlive, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlPlayerData1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPetStrain)
                    .addComponent(txtPetStrain))
                .addContainerGap())
        );

        pnlPet.add(pnlPlayerData1, java.awt.BorderLayout.WEST);

        getContentPane().add(pnlPet);
        pnlPet.setBounds(629, 6, 280, 233);

        pnlInventory.setBackground(new java.awt.Color(200, 164, 152));
        pnlInventory.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Food List", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 3, 15))); // NOI18N
        pnlInventory.setLayout(new java.awt.GridBagLayout());

        listInventory.setBackground(new java.awt.Color(249, 218, 218));
        listInventory.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        listInventory.setModel(new DefaultComboBoxModel(this.player.getFoodArrayList().toArray())
        );
        listInventory.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listInventory.setVisibleRowCount(3);
        listInventory.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listInventoryValueChanged(evt);
            }
        });
        scrlInventory.setViewportView(listInventory);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlInventory.add(scrlInventory, gridBagConstraints);

        btnFeed.setBackground(new java.awt.Color(185, 255, 185));
        btnFeed.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnFeed.setText("FEED");
        btnFeed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFeedActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlInventory.add(btnFeed, gridBagConstraints);

        getContentPane().add(pnlInventory);
        pnlInventory.setBounds(629, 242, 280, 162);

        pnlInventory1.setBackground(new java.awt.Color(200, 164, 152));
        pnlInventory1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Toy List", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 3, 15))); // NOI18N
        pnlInventory1.setForeground(new java.awt.Color(255, 255, 255));
        pnlInventory1.setLayout(new java.awt.GridBagLayout());

        listInventory1.setBackground(new java.awt.Color(249, 218, 218));
        listInventory1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        listInventory1.setModel(new DefaultComboBoxModel(this.player.getToyArrayList().toArray())
        );
        listInventory1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listInventory1.setVisibleRowCount(3);
        listInventory1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listInventory1ValueChanged(evt);
            }
        });
        scrlInventory1.setViewportView(listInventory1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlInventory1.add(scrlInventory1, gridBagConstraints);

        btnPlay.setBackground(new java.awt.Color(185, 255, 185));
        btnPlay.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnPlay.setText("PLAY");
        btnPlay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlayActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlInventory1.add(btnPlay, gridBagConstraints);

        getContentPane().add(pnlInventory1);
        pnlInventory1.setBounds(629, 410, 280, 162);

        Vet.setBackground(new java.awt.Color(200, 163, 152));
        Vet.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Vet", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 3, 15))); // NOI18N

        btnCure.setBackground(new java.awt.Color(185, 255, 185));
        btnCure.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnCure.setText("CURE THE PET");
        btnCure.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCureActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout VetLayout = new javax.swing.GroupLayout(Vet);
        Vet.setLayout(VetLayout);
        VetLayout.setHorizontalGroup(
            VetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, VetLayout.createSequentialGroup()
                .addContainerGap(80, Short.MAX_VALUE)
                .addComponent(btnCure)
                .addGap(71, 71, 71))
        );
        VetLayout.setVerticalGroup(
            VetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnCure, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
        );

        getContentPane().add(Vet);
        Vet.setBounds(629, 578, 280, 60);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/aut/pdc/mike/gui/img/gameBackGround.jpg"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(6, 0, 619, 597);

        btnExit.setBackground(new java.awt.Color(185, 255, 185));
        btnExit.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnExit.setText("SAVE AND EXIT");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });
        getContentPane().add(btnExit);
        btnExit.setBounds(690, 650, 160, 35);

        tipsLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        tipsLabel.setForeground(new java.awt.Color(115, 123, 169));
        tipsLabel.setText("TIPS:");
        getContentPane().add(tipsLabel);
        tipsLabel.setBounds(10, 600, 50, 40);

        tipsText.setEditable(false);
        tipsText.setBackground(new java.awt.Color(252, 231, 146));
        tipsText.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        tipsText.setForeground(new java.awt.Color(201, 24, 113));
        getContentPane().add(tipsText);
        tipsText.setBounds(60, 600, 560, 40);

        getAccessibleContext().setAccessibleName("Pet Information");

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Food list selected value changed
     * @param evt 
     */
    private void listInventoryValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listInventoryValueChanged
        Food food = (Food) listInventory.getSelectedValue();
        tipsText.setText(food.getName() + " can restore the pet " + food.getEnergy() + " energy.");
    }//GEN-LAST:event_listInventoryValueChanged
    /**
     * Feed button action performed
     * @param evt 
     */
    private void btnFeedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFeedActionPerformed
        Food food = (Food) listInventory.getSelectedValue();
        String message = this.player.feed(food);
        this.progPetEnergy.setValue(this.player.getPet().getEnergy());
        this.progPetHealth.setValue(new Double(this.player.getPet().getHealth()).intValue());
        checkPetSurvive();
        tipsText.setText(message);
    }//GEN-LAST:event_btnFeedActionPerformed
    /**
     * Toy list select value changed
     * @param evt 
     */
    private void listInventory1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listInventory1ValueChanged
        Toys toy = (Toys) listInventory1.getSelectedValue();
        tipsText.setText(toy.getName() + " can restore the pet " + toy.getHappiness() + " but cost it " + toy.getEnergyCost() + " energy.");
    }//GEN-LAST:event_listInventory1ValueChanged
    /**
     * Play button action performed
     * @param evt 
     */
    private void btnPlayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlayActionPerformed
        Toys toy = (Toys) listInventory1.getSelectedValue();
        String message = this.player.playWithPet(toy);
        this.progPetHappiness.setValue(this.player.getPet().getHappiness());
        this.progPetEnergy.setValue(this.player.getPet().getEnergy());
        checkPetSurvive();
        tipsText.setText(message);
    }//GEN-LAST:event_btnPlayActionPerformed
    /**
     * Cure button action performed
     * @param evt 
     */
    private void btnCureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCureActionPerformed
        checkPetSurvive();
        String message = this.player.cure();
        this.progPetHealth.setValue(new Double(this.player.getPet().getHealth()).intValue());
        tipsText.setText(message);
    }//GEN-LAST:event_btnCureActionPerformed
    /**
     * Save and Exit button action performed
     * @param evt 
     */
    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        int temp = 0;
        temp = this.exitPane.showConfirmDialog(this, "Do you want to exit the game now?", "EIXT", JOptionPane.YES_NO_OPTION);
        if (temp == 0) {
            temp = this.exitPane.showConfirmDialog(this, "Do you want to save the pet record?", "SAVE", JOptionPane.YES_NO_OPTION);
            if (temp == 0) {
                this.player.saveAndExit(this.player.getName());
            } else {
                System.exit(0);
            }
        }
    }//GEN-LAST:event_btnExitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VirtualPetFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VirtualPetFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VirtualPetFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VirtualPetFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VirtualPetFrame().setVisible(true);
            }
        });
    }
    /**
     * Set the game gui value
     * Update the pet's information
     * @param energy
     * @param happiness
     * @param health
     * @param age
     * @param alive 
     */
    public void setPetInformation(int energy, int happiness, double health, double age, boolean alive) {
        progPetEnergy.setValue(energy);
        progPetHappiness.setValue(happiness);
        progPetHealth.setValue(new Double(this.player.getPet().getHealth()).intValue());
        txtPetAge.setText(new DecimalFormat("0").format(age));
        if (alive) {
            txtPetAlive.setText("Alive");
        } else {
            txtPetAlive.setText("Dead");
        }
        tipsText.setText("");
    }

    public void setWarn(String message) {
        if (!("".equals(message))) {
            warnPane.showMessageDialog(null, message);
        }
    }

    /**
     * Check whether the pet survives
     */
    public void checkPetSurvive() {
        if (this.player.getPet().getEnergy() <= 0 || this.player.getPet().getHealth() <= 0) {
            txtPetAlive.setText("Dead");
            this.player.getPet().setHealth(0);
            this.player.getPet().setEnergy(0);
            this.player.getPet().setHappiness(0);
            this.player.getPet().setAlive(false);
            progPetEnergy.setValue(0);
            progPetHappiness.setValue(0);
            progPetHealth.setValue(0);
            //Let the player know the information about the pet's death
            warnPane.showMessageDialog(null, "Your pet is dead.\nGAME OVER");
            //Save the pet information and exit the program
            this.player.saveAndExit(this.player.getName());
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Vet;
    private javax.swing.JButton btnCure;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnFeed;
    private javax.swing.JButton btnPlay;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblPetAge;
    private javax.swing.JLabel lblPetAlive;
    private javax.swing.JLabel lblPetStrain;
    private javax.swing.JList listInventory;
    private javax.swing.JList listInventory1;
    private javax.swing.JProgressBar progPetEnergy;
    private javax.swing.JProgressBar progPetHappiness;
    private javax.swing.JProgressBar progPetHealth;
    private javax.swing.JLabel tipsLabel;
    private javax.swing.JTextField tipsText;
    private javax.swing.JLabel txtPetAge;
    private javax.swing.JLabel txtPetAlive;
    private javax.swing.JLabel txtPetName;
    private javax.swing.JLabel txtPetStrain;
    // End of variables declaration//GEN-END:variables
    private javax.swing.JOptionPane warnPane;
    private javax.swing.JOptionPane exitPane;
    public Player player;
    private MyThread mt;
}
